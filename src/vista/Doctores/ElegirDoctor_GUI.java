/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.Doctores;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import logica.CallBack;
import logica.LogicaDoctor;
import modelo.Doctor;

/**
 *
 * @author IVÁN-PC
 */
public class ElegirDoctor_GUI extends javax.swing.JDialog {

    private DefaultTableModel tabModel;
    private CallBack imc;
    

    public ElegirDoctor_GUI(java.awt.Frame parent, boolean modal,CallBack imc) {
        super(parent, modal);
        initComponents();
        this.imc = imc;

        tabModel = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        tabModel.setColumnIdentifiers(new Object[]{"DNI", "Nombre", "Apellidos", "Edad", "Sueldo"});
        tabDoctoresFiltrados.setModel(tabModel);
    }

    public void mostrar() {
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labCabecera = new javax.swing.JLabel();
        labFiltroDni = new javax.swing.JLabel();
        txtFiltroDni = new javax.swing.JTextField();
        butBuscar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabDoctoresFiltrados = new javax.swing.JTable();
        butCancelar = new javax.swing.JButton();
        butAceptar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Seleccionar Doctor");
        setMaximumSize(new java.awt.Dimension(600, 410));
        setMinimumSize(new java.awt.Dimension(600, 410));
        setName("Seleccionar Doctor"); // NOI18N
        setResizable(false);
        setSize(new java.awt.Dimension(600, 400));

        labCabecera.setBackground(new java.awt.Color(153, 255, 102));
        labCabecera.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        labCabecera.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labCabecera.setText("SELECCIONA UN DOCTOR");
        labCabecera.setOpaque(true);

        labFiltroDni.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        labFiltroDni.setText("DNI:");

        txtFiltroDni.setBackground(new java.awt.Color(255, 255, 153));

        butBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/iconsButtons/butBuscar.png"))); // NOI18N
        butBuscar.setText("Buscar");
        butBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butBuscarActionPerformed(evt);
            }
        });

        tabDoctoresFiltrados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabDoctoresFiltrados.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tabDoctoresFiltrados.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(tabDoctoresFiltrados);

        butCancelar.setText("Cancelar");
        butCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butCancelarActionPerformed(evt);
            }
        });

        butAceptar.setText("Aceptar");
        butAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butAceptarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labCabecera, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(labFiltroDni, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtFiltroDni, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(butBuscar)
                        .addGap(0, 44, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(butCancelar)
                        .addGap(18, 18, 18)
                        .addComponent(butAceptar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labCabecera, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labFiltroDni)
                    .addComponent(txtFiltroDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(butBuscar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(butAceptar)
                    .addComponent(butCancelar))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void limpiarTabla() {
        int cantidadFilas = tabModel.getRowCount();

        if (cantidadFilas != 0) {
            for (int i = cantidadFilas - 1; i >= 0; i--) {
                tabModel.removeRow(i);
            }
        }
    }

    private void butBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butBuscarActionPerformed

        try {
            limpiarTabla();
            tabDoctoresFiltrados.setModel(tabModel);
            List<Doctor> tDoctores = new ArrayList<>();
            LogicaDoctor.listadoDoctorFiltrado(tDoctores, txtFiltroDni.getText().equals("") ? "%" : txtFiltroDni.getText());

            for (Doctor d : tDoctores) {
                tabModel.addRow(new Object[]{
                    d.getDni(),
                    d.getNombre(),
                    d.getApellidos(),
                    d.getEdad(),
                    d.getSueldo()});
            }
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
    }//GEN-LAST:event_butBuscarActionPerformed

    private void butCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butCancelarActionPerformed
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_butCancelarActionPerformed

    private void butAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butAceptarActionPerformed

        int filaSeleccionada = tabDoctoresFiltrados.getSelectedRow();

        if (filaSeleccionada != -1) {
            try {
                String dniDoctor = String.valueOf(tabDoctoresFiltrados.getValueAt(filaSeleccionada, 0));
                
                Doctor dTMP = new Doctor();
                dTMP.setDni(dniDoctor);
                
                Doctor d = LogicaDoctor.getDoctor(dTMP);
                imc.panelDeLlamada(d);
                this.setVisible(false);
                this.dispose();
            } catch (Exception ex) {
                System.out.println(ex.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, 
                    "ERROR.No hay ningún doctor seleccionado!!", 
                    getName(), 
                    JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_butAceptarActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton butAceptar;
    private javax.swing.JButton butBuscar;
    private javax.swing.JButton butCancelar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labCabecera;
    private javax.swing.JLabel labFiltroDni;
    private javax.swing.JTable tabDoctoresFiltrados;
    private javax.swing.JTextField txtFiltroDni;
    // End of variables declaration//GEN-END:variables
}
